# AUTOGENERATED! DO NOT EDIT! File to edit: gradio.ipynb.

# %% auto 0
__all__ = ['exampleImagesList', 'plt', 'learn', 'categories', 'image', 'label', 'intf', 'getExampleImagesList', 'classify_image']

# %% gradio.ipynb 1
from fastai.vision.all import *
import gradio as gr

# %% gradio.ipynb 2
import os
import filetype
import pathlib

exampleImagesList = []

def getExampleImagesList(directory):
    for filepath in (pathlib.Path.cwd() / directory).iterdir():
        isDir = os.path.isdir(filepath)
        if(isDir):
            getExampleImagesList(filepath)
        elif(filetype.is_image(filepath)):
            exampleImagesList.append(filepath)

getExampleImagesList("./images" )

# %% gradio.ipynb 5
# Linux part: needed for Hugging Face platform
# Windows part: needed for Windows
# NotImplementedError: cannot instantiate 'PosixPath' (or 'WindowsPath) on your system
import pathlib
plt = platform.system()
if plt == 'Linux': pathlib.WindowsPath = pathlib.PosixPath
elif plt == 'Windows': pathlib.PosixPath = pathlib.WindowsPath

# %% gradio.ipynb 6
print("posix path:", pathlib.PosixPath)
print("windows path:", pathlib.WindowsPath)
print("plt:", plt)

# %% gradio.ipynb 7
learn = load_learner('training_export/export.pkl')

# %% gradio.ipynb 9
categories = ('Chaya plant', 'Papaya fruit', 'Papaya plant')
def classify_image(img):
    pred,idx,probs = learn.predict(img)
    return dict(zip(categories, map(float, probs)))

# %% gradio.ipynb 11
image = gr.components.Image(width=192,height=192)
label = gr.components.Label()

intf = gr.Interface(fn=classify_image, inputs = image, outputs = label, examples = exampleImagesList)
intf.launch(inline=False)
